<?php
/**
 * @file
 * Code for the DevShop Servers feature.
 */

include_once 'devshop_servers.features.inc';

/**
 * Implements hook_menu();
 * @return mixed
 */
function devshop_servers_menu(){
  $items['keys/%'] = array(
    'page callback' => 'devshop_servers_user_keys',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  return $items;
}

function devshop_servers_user_keys($username) {
  $account = user_load_by_name($username);
  $keys = sshkey_load_all_by_entity('user', $account->uid);
    foreach ($keys as $key) {
      print $key->value . PHP_EOL;
    }
}

/**
 * Implements hook_ansible_inventory_alter().
 */
function devshop_servers_ansible_inventory_alter(&$inventory) {
  $inventory->ansible_apache->vars->aegir_user_name = 'devshop';
  $inventory->ansible_apache->vars->aegir_user_uid = 123456;
  $inventory->ansible_apache->vars->aegir_user_home = '/home/devshop';
}

/**
 * Implements hook_node_access_records_alter().
 *
 * Make OG access grants priority over hosting_server/hosting_client.
 */
function devshop_servers_node_access_records_alter(&$grants, $node) {
  // If node has a project and does not have another access realm... load the grants from the project.
  if (!empty($node->project) && $node->type != 'project') {
    $project_nid = is_numeric($node->project)? $node->project: $node->project->nid;
    $project_node = node_load($project_nid);
    $grants = module_invoke_all('node_access_records', $project_node);
  }

  // If node is a server task, load grants from the devshop_organization node
//  dsm($node, 'ehko');
//  if ($node->type == 'task' && $node->ref->type == 'server' && isset($node->ref->devshop_organization[LANGUAGE_NONE][0]['target_id'])) {
//    $grants = module_invoke_all('node_access_records', $node->ref);
//  }


  // If node has OG Access, force it to be the only one.
  foreach ($grants as $i => &$grant) {
    if ($grant['realm'] == 'og_access:node') {
      $grant['priority'] = 2;
      $grants = array(
        $grant
      );
      break;
    }
  }

}


/**
 * Implements hook_form_alter().
 */
function devshop_servers_form_alter(&$form, &$form_state, $form_id) {
  $form['title']['#title'] = t('Name your Server');
  $form['title']['#attributes']['placeholder'] = t('servername');
  $form['title']['#attributes']['data-placement'] = 'top';

  $form['title']['#description'] = t('Enter the unique name you wish to give your server.');

  $form['title']['#field_prefix'] = "<div class='input-group'>";
  $form['title']['#field_suffix'] = "
        <div class=\"input-group-addon\">.devshop.systems</div>
        </div>
  ";

  $form['title']['#element_validate'][] = 'devshop_servers_title_element_validate';

  // Disable fields
  $form['human_name']['#access'] = FALSE;
  $form['ips_wrapper']['#access'] = FALSE;
  $form['field_url']['#access'] = FALSE;

  // @TODO: Test that content privacy is still saved.
  $form['group_content_access']['#access'] = FALSE;
//  dsm($form);


}

/**
 * Validator for the server name field: Appends ".devshop.systems" to the title.
 * @param $element
 * @param $form_state
 * @param $form
 */
function devshop_servers_title_element_validate($element, &$form_state, $form) {
  if (!empty($element['#value'])) {
    $new_name = $element['#value'] . '.devshop.systems';
    form_set_value($element, $new_name, $form_state);
  }
}